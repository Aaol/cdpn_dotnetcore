// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Prolog.Context;

namespace Prolog.Migrations
{
    [DbContext(typeof(PrologContext))]
    [Migration("20180619142608_Createdatabase")]
    partial class Createdatabase
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.1-rtm-30846");

            modelBuilder.Entity("Prolog.Models.Argument", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Discriminator")
                        .IsRequired();

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.ToTable("Arguments");

                    b.HasDiscriminator<string>("Discriminator").HasValue("Argument");
                });

            modelBuilder.Entity("Prolog.Models.ArgumentPosition", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<long?>("ArgumentId");

                    b.Property<long?>("FactId");

                    b.Property<int>("Rank");

                    b.HasKey("Id");

                    b.HasIndex("ArgumentId");

                    b.HasIndex("FactId");

                    b.ToTable("ArgumentPositions");
                });

            modelBuilder.Entity("Prolog.Models.Fact", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Name");

                    b.Property<long?>("RuleId");

                    b.HasKey("Id");

                    b.HasIndex("RuleId");

                    b.ToTable("Facts");
                });

            modelBuilder.Entity("Prolog.Models.Rule", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<long>("IdResponse");

                    b.HasKey("Id");

                    b.HasIndex("IdResponse")
                        .IsUnique();

                    b.ToTable("Rules");
                });

            modelBuilder.Entity("Prolog.Models.Atom", b =>
                {
                    b.HasBaseType("Prolog.Models.Argument");


                    b.ToTable("Atom");

                    b.HasDiscriminator().HasValue("Atom");
                });

            modelBuilder.Entity("Prolog.Models.Variable", b =>
                {
                    b.HasBaseType("Prolog.Models.Argument");


                    b.ToTable("Variable");

                    b.HasDiscriminator().HasValue("Variable");
                });

            modelBuilder.Entity("Prolog.Models.ArgumentPosition", b =>
                {
                    b.HasOne("Prolog.Models.Argument", "Argument")
                        .WithMany("Positions")
                        .HasForeignKey("ArgumentId");

                    b.HasOne("Prolog.Models.Fact", "Fact")
                        .WithMany("ArgumentPositions")
                        .HasForeignKey("FactId");
                });

            modelBuilder.Entity("Prolog.Models.Fact", b =>
                {
                    b.HasOne("Prolog.Models.Rule", "Rule")
                        .WithMany("Facts")
                        .HasForeignKey("RuleId");
                });

            modelBuilder.Entity("Prolog.Models.Rule", b =>
                {
                    b.HasOne("Prolog.Models.Fact", "Response")
                        .WithOne("RuleResponse")
                        .HasForeignKey("Prolog.Models.Rule", "IdResponse")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
